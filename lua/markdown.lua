---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by foyjog.
--- DateTime: 12/25/21 9:36 AM
---

--- this program  traversal markdown to html
---
--- # This is a test -> <h1>This is a test</h1>
--- paragraph-> <p>paragraph</p>
--- [links](https://www.baidu.com) -> <a href=https://www.baidu.com> links</a>
--- * order list  -> <ul><li>order list </li></ul>
--- ``` code  ``` -> <p><code>code<code><p>

local lpeg = require("lpeg")

local trim = function(str)
    res = str:gsub("^%s*(.-)%s*$", "%1")
    return res
end

local function head(p)
    return p / function(left, right)
        if #left == 1 then
            return "<h1>" .. right .. "</h1>"
        end if #left == 2 then
            return "<h2>" .. right .. "</h2>"
        end if #left == 3 then
            return "<h3>" .. right .. "</h3>"
        end if #left == 4 then
            return "<h4>" .. right .. "</h4>"
        end if #left == 5 then
            return "<h5>" .. right .. "</h5>"
        end if #left == 6 then
            return "<h6>" .. right .. "</h6>"
        end

        return "<h6>" .. right .. " </h6>"
    end
end

local function href_combine(href_name,href_address)
    return string.format("<a href=%s>%s</a>",href_address,href_name)
end

markdown =  lpeg.P({

        "markdown";
        any_sharp = lpeg.C(lpeg.P("#")^1),
        space = lpeg.P" ",
        not_n = lpeg.C((1-lpeg.P("\n"))^0),
        heading = head(lpeg.V"any_sharp" * lpeg.V"space" * lpeg.V"not_n"),
        paragraph = lpeg.Cc("<p>") * ((1-lpeg.P("\n")) ^ 1 /trim) * lpeg.Cc("</p>"),
        href_name =   lpeg.P"[" * ((1 - lpeg.P("]")) ^ 0 /trim)  * lpeg.P("]") ,
        href_address = lpeg.P"(" * ((1 - lpeg.P(")")) ^ 0 /trim) * lpeg.P(")"),
        href = (lpeg.V"href_name" * lpeg.V"href_address") / href_combine,
        code = lpeg.P("```") * lpeg.Cc("<p><code>") * (((1-lpeg.P("```"))^0)/trim) * lpeg.P("```") * lpeg.Cc("</code></p>") ,
        orderlist =  (lpeg.P("* ")) * lpeg.Cc("<ul><li>")* (((1-lpeg.P("\n"))^0)/tostring)*lpeg.Cc("</ul></li>"),
        markdown = lpeg.Ct((lpeg.P"\n"^1 + lpeg.V"heading" + lpeg.V"href" + lpeg.V"code" + lpeg.V"orderlist" + lpeg.V"paragraph" ) ^ 0 )
    }
)

print(table.concat(markdown:match("# This is a test\nparagraph\n[links](https://www.baidu.com)\n``` code ```\n* order list")))
